name: Flowable Main Build

on: [push, pull_request]

env:
  MAVEN_ARGS: >-
    -B -V --no-transfer-progress
    -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  MAVEN_WINDOWS_ARGS: >-
    -B -V --no-transfer-progress
    -D http.keepAlive=false -D maven.wagon.http.pool=false -D maven.wagon.httpconnectionManager.ttlSeconds=120

jobs:
  test_jdk:
    name: Linux (JDK ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [1.8, 11, 13, 14]
    steps:
    - uses: actions/checkout@v2-beta
      with:
        fetch-depth: 10
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven Repository
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Install
      # Need to do install first in order for the OSGi tests to work
      run: ./mvnw install ${MAVEN_ARGS} -DskipTests=true -Dmaven.javadoc.skip=true
    - name: Test
      run: ./mvnw verify -Pdistro,errorLogging,includeDockerTests ${MAVEN_ARGS} -Dmaven.test.redirectTestOutputToFile=false
  windows:
    name: 'Windows'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Maven Repository
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install
        # Need to do install first in order for the OSGi tests to work
        run: ./mvnw install %MAVEN_ARGS% -D skipTests=true -D maven.javadoc.skip=true
      - name: Test
        run: ./mvnw verify -P distro,errorLogging,includeDockerTests %MAVEN_ARGS% -D maven.test.redirectTestOutputToFile=false
