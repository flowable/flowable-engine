<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!--
  Simulation manager is used to manage simulation experiment. It instantiate simulation engines to perform
  simulation runs
  -->
  <bean id="processEngineConfiguration" class="org.flowable.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration">
    <property name="engineName" value="simulationManager"/>
    <property name="jdbcUrl" value="jdbc:h2:mem:simulationManager;DB_CLOSE_DELAY=1000"/>
    <property name="jdbcDriver" value="org.h2.Driver"/>
    <property name="jdbcUsername" value="sa"/>
    <property name="jdbcPassword" value=""/>

    <!-- Database configurations -->
    <property name="databaseSchemaUpdate" value="drop-create"/>

    <property name="beans">
      <map>
        <entry key="simulationRunFactory" value-ref="&amp;simulationRunFa"/>
      </map>
    </property>

    <property name="expressionManager">
      <bean class="org.flowable.crystalball.simulator.SimulationExpressionManager">
        <constructor-arg name="beans">
          <map>
            <entry key="simulationRunFactory" value-ref="&amp;simulationRunFa"/>
          </map>
        </constructor-arg>
        <constructor-arg name="delegateInterceptor" ref="delegateInterceptor" />
      </bean>
    </property>

  </bean>

  <!--
  simulationRunFactory creates new simulationRun instances
  -->
  <bean id="simulationRunFa" class="org.flowable.crystalball.simulator.SimpleSimulationRunFactory">
    <property name="processEngine" ref="&amp;defaultProcessEngineFactory"/>
    <property name="eventCalendar" ref="&amp;eventCalendar"/>
    <!-- handlers for events from the event calendar -->
    <property name="customEventHandlerMap">
      <map>
        <entry key="runScriptEvent">
          <bean class="org.flowable.crystalball.simulator.impl.ScriptEventHandler">
            <constructor-arg name="language" value="groovy"/>
            <constructor-arg name="scriptPropertyName" value='script'/>
          </bean>
        </entry>
      </map>
    </property>
  </bean>

  <!--
   SimulationRun uses process engine created in the following factory
    (to keep things simple only one DB configuration and clock is used)
  -->
  <bean id="defaultProcessEngineFactory" class="org.flowable.crystalball.simulator.impl.SimulationProcessEngineFactory">
    <constructor-arg name="processEngineConfiguration">
      <bean class="org.flowable.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration">

        <property name="engineName" value="simulation-run-flowable"/>
        <property name="jdbcUrl" value="jdbc:h2:mem:simulation-run-flowable;DB_CLOSE_DELAY=1000"/>
        <property name="jdbcDriver" value="org.h2.Driver"/>
        <property name="jdbcUsername" value="sa"/>
        <property name="jdbcPassword" value=""/>

        <property name="delegateInterceptor" ref="delegateInterceptor"/>
        <property name="clock" ref="clock"/>
        <property name="disableIdmEngine" value="true"/>

        <!--
        command context reuse is not possible when there are 2 engines running -> both with different
        process definitions in the repository.
        -->
        <property name="defaultCommandConfig">
          <bean class="org.flowable.common.engine.impl.interceptor.CommandConfig">
            <constructor-arg name="contextReusePossible" value="false"/>
          </bean>
        </property>

        <property name="schemaCommandConfig">
          <bean class="org.flowable.common.engine.impl.interceptor.CommandConfig">
            <constructor-arg name="contextReusePossible" value="false"/>
          </bean>
        </property>

        <!-- Database configurations -->
        <property name="databaseSchemaUpdate" value="drop-create"/>
      </bean>
    </constructor-arg>
  </bean>

  <bean id="clock" class="org.flowable.common.engine.impl.util.DefaultClockImpl"/>

  <!-- simulation run is driven by event calendar. -->
  <bean id="eventCalendar" class="org.flowable.crystalball.simulator.SimpleEventCalendarFactory">
    <constructor-arg name="clockReader" ref="clock"/>
    <constructor-arg name="eventComparator">
      <bean class="org.flowable.crystalball.simulator.SimulationEventComparator"/>
    </constructor-arg>
    <constructor-arg name="simulationEvents">
      <!--
       there is one script event scheduled for execution:
       time(0) -> execute script to set execution variable
      -->
      <list>
        <bean class="org.flowable.crystalball.simulator.SimulationEvent.Factory">
          <constructor-arg name="type" value="runScriptEvent"/>
          <constructor-arg name="simulationTime" value="0"/>
          <constructor-arg name="properties">
            <map>
              <entry key="script" value='
                execution.setVariable("simulationRunResult-" + loopCounter, "Hello world"+ loopCounter + "!");
              '/>
            </map>
          </constructor-arg>
        </bean>

      </list>
    </constructor-arg>
  </bean>

  <bean id="delegateInterceptor" class="org.flowable.engine.impl.delegate.invocation.DefaultDelegateInterceptor"/>

</beans>
