<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:flowable="http://flowable.org/bpmn"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC"
             xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             typeLanguage="http://www.w3.org/2001/XMLSchema"
             expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.flowable.org/test">
    <process id="compensateProcess" isExecutable="true">
        <startEvent id="start"/>
        <callActivity id="sp" name="Sub process 1" calledElement="compensateEventTest.subProcess1"></callActivity>
        <sequenceFlow id="flow1" sourceRef="start" targetRef="sp"></sequenceFlow>
        <callActivity id="sp2" name="Sub Process 2" calledElement="compensateEventTest.subProcess2"></callActivity>
        <boundaryEvent id="boundarycompensation2" name="Compensate" attachedToRef="sp2" cancelActivity="true">
            <compensateEventDefinition></compensateEventDefinition>
        </boundaryEvent>
        <scriptTask id="scripttaskCom02" name="Script Task Com 02" isForCompensation="true" scriptFormat="groovy" flowable:autoStoreVariables="false">
            <script>
                out:println "Script Task Com 02";
                execution.setVariable("test2" , "compensated2");
            </script>
        </scriptTask>
        <intermediateThrowEvent id="compensationintermediatethrowevent3" name="CompensationThrowingEvent">
            <compensateEventDefinition></compensateEventDefinition>
        </intermediateThrowEvent>
        <sequenceFlow id="flow15" sourceRef="sp2" targetRef="compensationintermediatethrowevent3"></sequenceFlow>
        <sequenceFlow id="flow16" sourceRef="sp" targetRef="sp2"></sequenceFlow>
        <boundaryEvent id="boundarycompensation3" name="Compensate" attachedToRef="sp" cancelActivity="true">
            <compensateEventDefinition></compensateEventDefinition>
        </boundaryEvent>
        <scriptTask id="scripttaskCom01" name="Script Task Com 01" isForCompensation="true" scriptFormat="groovy" flowable:autoStoreVariables="false">
            <script>
                out:println "Script Task Com 01";
                execution.setVariable("test1" , "compensated1");
            </script>
        </scriptTask>
        <endEvent id="endevent2" name="End"></endEvent>
        <userTask id="usertask2" name="User Task 02"></userTask>
        <sequenceFlow id="flow20" sourceRef="compensationintermediatethrowevent3" targetRef="usertask2"></sequenceFlow>
        <sequenceFlow id="flow21" sourceRef="usertask2" targetRef="endevent2"></sequenceFlow>
        <association id="association2" sourceRef="boundarycompensation2" targetRef="scripttask2"></association>
        <association id="association3" sourceRef="boundarycompensation3" targetRef="scripttask3"></association>
        <association id="association4" sourceRef="boundarycompensation3" targetRef="scripttaskCom01"></association>
        <association id="association5" sourceRef="boundarycompensation2" targetRef="scripttaskCom02"></association>
    </process>
</definitions>
