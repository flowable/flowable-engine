<?xml version="1.0" encoding="UTF-8"?>
<definitions id="definitions" 
  xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
  xmlns:flowable="http://flowable.org/bpmn"
  targetNamespace="Examples">
	
	<process id="compensateProcess">

		<startEvent id="start" />
		
		<sequenceFlow sourceRef="start"	targetRef="subProcess" />
        
        <subProcess id="subProcess">
        
            <startEvent id="subStart" />
            
            <sequenceFlow sourceRef="subStart" targetRef="bookHotel" />

            <serviceTask id="bookHotel" flowable:expression="${true}" />
    				
            <boundaryEvent id="compensateBookHotelEvt" name="Boundary event" attachedToRef="bookHotel">
                <compensateEventDefinition />
            </boundaryEvent>
    			
            <serviceTask id="undoBookHotel" isForCompensation="true"
                flowable:class="org.flowable.engine.test.bpmn.event.compensate.helper.UndoService">
                <extensionElements>
                    <flowable:field name="counterName" stringValue="undoBookHotel" />
                </extensionElements>
            </serviceTask>
    
            <sequenceFlow sourceRef="bookHotel" targetRef="firstWait" />
            
            <receiveTask id="firstWait" />

            <sequenceFlow sourceRef="firstWait" targetRef="throwCompensate" />
    
    		<intermediateThrowEvent id="throwCompensate">
                <compensateEventDefinition activityRef="undoBookHotel" />
    		</intermediateThrowEvent>
    		
    		<sequenceFlow sourceRef="throwCompensate" targetRef="subEnd" />
            
            <endEvent id="subEnd" />
            
            <association associationDirection="One" sourceRef="compensateBookHotelEvt" targetRef="undoBookHotel" />
            
        </subProcess>
        
        <sequenceFlow sourceRef="subProcess" targetRef="beforeEnd" />

		<receiveTask id="beforeEnd" />

        <sequenceFlow sourceRef="beforeEnd" targetRef="end" />
		
		<endEvent id="end" />
	</process>

</definitions>
