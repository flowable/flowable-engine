<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="org.flowable.idm.engine.impl.persistence.entity.TokenEntityImpl">

  <!-- TOKEN INSERT -->
  
  <insert id="insertToken" parameterType="org.flowable.idm.engine.impl.persistence.entity.TokenEntityImpl">
      insert into ${prefix}ACT_ID_TOKEN (
      	ID_,
      	REV_, 
        TOKEN_VALUE_,
        TOKEN_DATE_,
        IP_ADDRESS_,
        USER_AGENT_,
        USER_ID_,
        TOKEN_DATA_
      ) values (
        #{id, jdbcType=NVARCHAR},
        1, #{tokenValue, jdbcType=NVARCHAR},
        #{tokenDate, jdbcType=TIMESTAMP},
        #{ipAddress, jdbcType=NVARCHAR},
        #{userAgent, jdbcType=NVARCHAR},
        #{userId, jdbcType=NVARCHAR},
        #{tokenData, jdbcType=NVARCHAR}
      )
  </insert>
  
  <insert id="bulkInsertToken" parameterType="java.util.List">
      insert into ${prefix}ACT_ID_TOKEN (
        ID_,
        REV_, 
        TOKEN_VALUE_,
        TOKEN_DATE_,
        IP_ADDRESS_,
        USER_AGENT_,
        USER_ID_,
        TOKEN_DATA_
      ) values 
      <foreach collection="list" item="token" index="index" separator=",">
      (
        #{token.id, jdbcType=NVARCHAR},
        1, #{token.tokenValue, jdbcType=NVARCHAR},
        #{token.tokenDate, jdbcType=TIMESTAMP},
        #{token.ipAddress, jdbcType=NVARCHAR},
        #{token.userAgent, jdbcType=NVARCHAR},
        #{token.userId, jdbcType=NVARCHAR},
        #{token.tokenData, jdbcType=NVARCHAR}
      )
      </foreach>
  </insert>
  
  <insert id="bulkInsertToken" databaseId="oracle" parameterType="java.util.List">
      INSERT ALL
      <foreach collection="list" item="token" index="index">
        INTO ${prefix}ACT_ID_TOKEN (
            ID_,
            REV_, 
            TOKEN_VALUE_,
            TOKEN_DATE_,
            IP_ADDRESS_,
            USER_AGENT_,
            USER_ID_,
            TOKEN_DATA_
      ) VALUES (
        #{token.id, jdbcType=NVARCHAR},
        1, #{token.tokenValue, jdbcType=NVARCHAR},
        #{token.tokenDate, jdbcType=TIMESTAMP},
        #{token.ipAddress, jdbcType=NVARCHAR},
        #{token.userAgent, jdbcType=NVARCHAR},
        #{token.userId, jdbcType=NVARCHAR},
        #{token.tokenData, jdbcType=NVARCHAR}
      )
      </foreach>
      SELECT * FROM dual
  </insert>
  

  <!-- TOKEN UPDATE -->
  
  <update id="updateToken" parameterType="org.flowable.idm.engine.impl.persistence.entity.TokenEntityImpl">
    update ${prefix}ACT_ID_TOKEN
    <set>
      REV_ = #{revisionNext, jdbcType=INTEGER},
      TOKEN_VALUE_ = #{tokenValue, jdbcType=NVARCHAR},
      TOKEN_DATE_ = #{tokenDate, jdbcType=TIMESTAMP},
      IP_ADDRESS_ = #{ipAddress, jdbcType=NVARCHAR},
      USER_AGENT_ = #{userAgent, jdbcType=NVARCHAR},
      USER_ID_ = #{userId, jdbcType=NVARCHAR},
      TOKEN_DATA_ = #{tokenData, jdbcType=NVARCHAR},
    </set>
    where ID_ = #{id, jdbcType=NVARCHAR} AND REV_ = #{revision, jdbcType=INTEGER}
  </update>

  <!-- TOKEN DELETE -->
  
  <delete id="deleteToken" parameterType="org.flowable.idm.engine.impl.persistence.entity.TokenEntityImpl">
    delete from ${prefix}ACT_ID_TOKEN where ID_ = #{id, jdbcType=NVARCHAR} and REV_ = #{revision, jdbcType=INTEGER}
  </delete>


  <!-- TOKEN SELECT -->
  
  <resultMap id="tokenResultMap" type="org.flowable.idm.engine.impl.persistence.entity.TokenEntityImpl">
    <id property="id" column="ID_" jdbcType="NVARCHAR" />
    <result property="revision" column="REV_" jdbcType="INTEGER" />
    <result property="tokenValue" column="TOKEN_VALUE_" jdbcType="NVARCHAR" />
    <result property="tokenDate" column="TOKEN_DATE_" jdbcType="TIMESTAMP" />
    <result property="ipAddress" column="IP_ADDRESS_" jdbcType="NVARCHAR" />
    <result property="userAgent" column="USER_AGENT_" jdbcType="NVARCHAR" />
    <result property="userId" column="USER_ID_" jdbcType="NVARCHAR" />
    <result property="tokenData" column="TOKEN_DATA_" jdbcType="NVARCHAR" />
  </resultMap>
  
  <select id="selectToken" parameterType="string" resultMap="tokenResultMap">
    select * from ${prefix}ACT_ID_TOKEN where ID_ = #{id, jdbcType=NVARCHAR}
  </select>
  
  <select id="selectTokenByQueryCriteria" parameterType="org.flowable.idm.engine.impl.TokenQueryImpl" resultMap="tokenResultMap">
    <if test="needsPaging">${limitBefore}</if>
    SELECT RES.* <if test="needsPaging">${limitBetween}</if>
    <include refid="selectTokenByQueryCriteriaSql" />
    ${orderBy}
    <if test="needsPaging">${limitAfter}</if>
  </select>
  
   <select id="selectTokenCountByQueryCriteria" parameterType="org.flowable.idm.engine.impl.TokenQueryImpl" resultType="long">
    select count(RES.ID_)
    <include refid="selectTokenByQueryCriteriaSql" />
  </select>
  
  <sql id="selectTokenByQueryCriteriaSql">
    from ${prefix}ACT_ID_TOKEN RES 
    <where>
      <if test="id != null">
        RES.ID_ = #{id, jdbcType=NVARCHAR}
      </if>
      <if test="ids != null &amp;&amp; !ids.empty">
        and RES.ID_ IN
        <foreach item="id" index="index" collection="ids" 
                 open="(" separator="," close=")">
          #{id, jdbcType=NVARCHAR}
        </foreach>
      </if>
      <if test="tokenValue != null">
        and RES.TOKEN_VALUE_ = #{tokenValue, jdbcType=NVARCHAR}
      </if>
      <if test="tokenDate != null">
        and RES.TOKEN_DATE_ = #{tokenDate, jdbcType=TIMESTAMP}
      </if>
      <if test="tokenDateBefore != null">
        and RES.TOKEN_DATE_ &lt; #{tokenDateBefore, jdbcType=TIMESTAMP}
      </if>
      <if test="tokenDateAfter != null">
        and RES.TOKEN_DATE_ &gt; #{tokenDateAfter, jdbcType=TIMESTAMP}
      </if>
      <if test="ipAddress != null">
        and RES.IP_ADDRESS_ = #{ipAddress, jdbcType=NVARCHAR}
      </if>
      <if test="ipAddressLike != null">
        and RES.IP_ADDRESS_ like #{ipAddressLike, jdbcType=NVARCHAR}${wildcardEscapeClause}
      </if>
      <if test="userAgent != null">
        and RES.USER_AGENT_ = #{userAgent, jdbcType=NVARCHAR}
      </if>
      <if test="userAgentLike != null">
        and RES.USER_AGENT_ like #{userAgentLike, jdbcType=NVARCHAR}${wildcardEscapeClause}
      </if>
      <if test="userId != null">
        and RES.USER_ID_ = #{userId, jdbcType=NVARCHAR}
      </if>
      <if test="userIdLike != null">
        and RES.USER_ID_ like #{userIdLike, jdbcType=NVARCHAR}${wildcardEscapeClause}
      </if>
      <if test="tokenData != null">
        and RES.TOKEN_DATA_ = #{tokenData, jdbcType=NVARCHAR}
      </if>
      <if test="tokenDataLike != null">
        and RES.TOKEN_DATA_ like #{tokenDataLike, jdbcType=NVARCHAR}${wildcardEscapeClause}
      </if>
    </where>
  </sql>

  <select id="selectTokenByNativeQuery" parameterType="java.util.Map" resultMap="tokenResultMap">
    <include refid="org.flowable.common.engine.db.selectByNativeQuery"/>
  </select>

  <select id="selectTokenCountByNativeQuery" parameterType="java.util.Map" resultType="long">
    ${sql}
  </select>
  
</mapper>
